
{
  "swagger": "2.0",
  "description": "MUSIC API course for egghead",
  "info": {
    "version": "1.0.0",
    "title": "Music API Documentation",
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tag":[{
    "name":"Songs",
    "description":"API for Songs Endpoints"},
    {
      "name":"Users",
      "description":"API for Users Endpoints"}
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths":{
    "/users/signup":{
      "post":{
        "tags":["Users"],
        "summary":"API Endpoint for create User",
        "description":"Create new User in database",
        "parameters":[
          {
            "name":"user",
            "description":"User params to register new user",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#definitions/User"
            }

          }
        ],
        "produces":["application/json"],
        "responses":{
          "200":{
            "description":"New user has Created",
            "schema":{
              "$ref":"#definitions/SignupRsp"
            }
          }
        }
      }
    },
    "/users/login":{
      "post":{
        "tags":["Users"],
        "summary":"API Endpoint to login his/her account",
        "description":"Login user",
        "parameters":[
          {
            "name":"user",
            "description":"User params to login",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#definitions/UserLogin"
            }

          }
        ],
        "produces":["application/json"],
        "responses":{
          "200":{
            "description":"New user has loggedIn",
            "schema":{
              "$ref":"#definitions/UserLoginRsp"
            }
          }
        }
      }
    },
    "/songs":{
      "post":{
        "tags":["Songs"],
        "summary":"API Endpoint for create Song",
        "description":"Create new Song in database",
        "parameters":[
          {
            "name":"song",
            "description":"Song params to create new song",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#definitions/Song"
            }

          },
          {
            "name":"authorization",
            "description":"Access token to authorize the user",
            "in":"header",
            "type":"string",
            "required":"true",
            "schema":{
              "$ref":"#definitions/Song"
            }
          }
        ],
        "produces":["application/json"],
        "responses":{
          "200":{
            "description":"New Song Created",
            "schema":{
              "$ref":"#definitions/Song"
            }
          }
        }
      },
      "get":{
        "tags":["Songs"],
        "summary":"API Endpoint to find all Songs",
        "description":"Find all songs from the database",
        "parameters":[
          {
            "name":"page",
            "type":"integer",
            "description":"Define the page index for the record",
            "in":"query"
          },
          {
            "name":"perPage",
            "type":"integer",
            "description":"Define the limit for the records i.e 10",
            "in":"query"

          },
          {
            "name":"authorization",
            "description":"Access token to authorize the user",
            "in":"header",
            "type":"string",
            "required":"true",
            "schema":{
              "$ref":"#definitions/Song"
            }
          }
        ],
        "produces":["application/json"],
        "responses":{
          "200":{
            "description":"All the songs",
            "schema":{
              "$ref":"#definitions/Song"
            }
          }
        }
      }
    },
    "/songs/{id}":{
      "parameters":[
        {
          "name":"id",
          "in":"path",
          "required":"true",
          "description":"id of the song",
          "type":"string"
          
        },
        {
          "name":"authorization",
          "description":"Access token to authorize the user",
          "in":"header",
          "type":"string",
          "required":"true",
          "schema":{
            "$ref":"#definitions/Song"
          }
        }
      ],
      "get":{
        "tags":["Songs"],
        "summary":"API Endpoint to find single song",
        "description":"Find a song from the database",
        "produces":["application/json"],
        "responses":{
          "200":{
            "description":"Song has been found",
            "schema":{
              "$ref":"#definitions/Song"
            }
          }
        }
      },
      "delete":{
        "tags":["Songs"],
        "summary":"API Endpoint to delete single song",
        "description":"delete a song from the database",
        "produces":["application/json"],
        "responses":{
          "200":{
            "description":"Song has been deleted",
            "schema":{
              "$ref":"#definitions/Song"
            }
          }
        }
      },
      "put":{
        "tags":["Songs"],
        "summary":"API Endpoint for create Song",
        "description":"update Song in database",
        "parameters":[
          {
            "name":"song",
            "description":"Song params to update song",
            "in":"body",
            "schema":{
              "$ref":"#definitions/Updatesong"
            }

          }
        ],
        "produces":["application/json"],
        "responses":{
          "200":{
            "description":"Song has updated",
            "schema":{
              "$ref":"#definitions/Song"
            }
          }
        }
      }
      
    }
  },

  "definitions":{
    "SignupRsp":{
      "properties":{
        "success":{"type":"boolean"}
      }
    },
    "User":{
      "required":["first","lastName","email","password"],
      "properties":{
        "firstName":{
          "type":"string"
        },
        "lastName":{
          "type":"string"
        },
        "email":{
          "type":"string"
        },
        "password":{
          "type":"string"
        }

      }

    },
    "UserLogin":{
      "required":["email","password"],
      "properties":{
        "email":{
          "type":"string"
        },
        "password":{
          "type":"string"
        }
      }
    },

    "UserLoginRsp":{
      "properties":{
        "token":{
          "type":"string"
        }
      }
    },

    "Song":{
      "required":["title","url"],
      "properties":{
        "_id":{
          "type":"string"
        },
        "title":{
          "type":"string"
        },
        "url":{
          "type":"string"
        },
        "rating":{
          "type":"integer",
          "format": "Int32"
        }
      }

    },
    "Songs":{
      
      "properties":{
        "docs":{
          "type":"array",
          "$ref":"#definitions/Song"
        },
        "total":{
          "type":"integer"
        },
        "pages":{
          "type":"integer"
        },
        "limit":{
          "type":"integer"
          
        },
        "page":{
          "type":"integer"
        }

      }

    },
    "Updatesong":{
      "properties":{
        "title":{
          "type":"string"
        },
        "url":{
          "type":"string"
        },
        "rating":{
          "type":"integer",
          "format": "Int32"
        }
      }

    }

  }
}